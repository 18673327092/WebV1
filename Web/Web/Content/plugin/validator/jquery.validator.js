/* nice Validator 0.7.1
 * (c) 2012-2014 Jony Zhang <zj86@live.cn>, MIT Licensed
 * http://niceue.com/validator/
 */
(function (F, o) { var K = "validator", A = "." + K, j = ".rule", G = ".field", U = ".form", Q = "nice-" + K, E = "n-ok", a = "n-error", b = "n-tip", P = "n-loading", g = "msg-box", ab = "aria-required", u = "aria-invalid", i = "data-rule", r = "data-msg", J = "data-tip", R = "data-ok", W = "data-target", I = "data-inputstatus", n = "novalidate", l = ":verifiable", O = /(!?)\s?(\w+)(?:\[\s*(.*?\]?)\s*\]|\(\s*(.*?\)?)\s*\))?\s*(;|\||&)?/g, D = /(\w+)(?:\[\s*(.*?\]?)\s*\]|\(\s*(.*?\)?)\s*\))?/, v = /(?:([^:;\(\[]*):)?(.*)/, e = /[^\x00-\xff]/g, h = /^.*(top|right|bottom|left).*$/, ac = /(?:(post|get):)?(.+)/i, L = /<|>/g, X = F.noop, S = F.proxy, t = F.isFunction, z = F.isArray, m = function (ad) { return typeof ad === "string"; }, N = function (ad) { return ad && Object.prototype.toString.call(ad) === "[object Object]"; }, aa = !window.XMLHttpRequest, s = function (ae, ad, af) { if (af !== o) { if (af === null) { ae.removeAttribute(ad); } else { ae.setAttribute(ad, "" + af); } } else { return ae.getAttribute(ad); } }, y = window.console || { log: X, info: X }, k, V, H = { debug: 0, timely: 1, theme: "default", ignore: "", focusInvalid: true, beforeSubmit: X, validClass: "n-valid", invalidClass: "n-invalid", msgWrapper: "span", msgMaker: function (af) { var ae, ad = { error: a, ok: E, tip: b, loading: P }[af.type]; ae = '<span class="msg-wrap ' + ad + '" role="alert">'; ae += af.arrow + af.icon + '<span class="n-msg">' + af.msg + "</span>"; ae += "</span>"; return ae; }, msgIcon: '<span class="n-icon"></span>', msgArrow: "", msgClass: "", defaultMsg: "{0} is not valid.", loadingMsg: "Validating..." }, d = { "default": { formClass: "n-default", msgClass: "n-right", showOk: "" } }; F.fn[K] = function (ae) { var af = this, ad = arguments; if (af.is(":input")) { return af; } !af.is("form") && (af = this.find("form")); !af.length && (af = this); af.each(function () { var ag = F(this).data(K); if (ag) { if (m(ae)) { if (ae.charAt(0) === "_") { return; } ag[ae].apply(ag, Array.prototype.slice.call(ad, 1)); } else { if (ae) { ag._reset(true); ag._init(this, ae); } } } else { new q(this, ae); } }); return this; }; F.fn.isValid = function (ah, ag) { var ae = M(this[0]), af = t(ah), ad; if (!ae) { return true; } ae.checkOnly = !ag; ad = ae._multiValidate(this.is(":input") ? this : this.find(l), function (ai) { af && ah.call(null, ai); ae.checkOnly = false; }); return af ? this : ad; }; F.expr[":"].verifiable = function (ae) { var ad = ae.nodeName.toLowerCase(); return (ad === "input" && !({ submit: 1, button: 1, reset: 1, image: 1 })[ae.type] || ad === "select" || ad === "textarea") && ae.disabled === false; }; function q(ae, ad) { var af = this; if (!af instanceof q) { return new q(ae, ad); } af.$el = F(ae); af._init(ae, ad); } q.prototype = { _init: function (ag, ad) { var ah = this, af, ai, aj; if (t(ad)) { ad = { valid: ad }; } ad = ad || {}; aj = s(ag, "data-" + K + "-option"); aj = aj && aj.charAt(0) === "{" ? (new Function("return " + aj))() : {}; ai = d[ad.theme || aj.theme || H.theme]; af = ah.options = F.extend({}, H, ai, aj, ah.options, ad); ah.rules = new Y(af.rules, true); ah.messages = new T(af.messages, true); ah.elements = ah.elements || {}; ah.deferred = {}; ah.errors = {}; ah.fields = {}; ah._initFields(af.fields); if (z(af.groups)) { F.map(af.groups, function (ak) { if (!m(ak.fields) || !t(ak.callback)) { return null; } ak.$elems = ah.$el.find(C(ak.fields)); F.map(ak.fields.split(" "), function (al) { ah.fields[al] = ah.fields[al] || {}; ah.fields[al].group = ak; }); }); } ah.msgOpt = { type: "error", pos: x(af.msgClass), wrapper: af.msgWrapper, cls: af.msgClass, style: af.msgStyle, icon: af.msgIcon, arrow: af.msgArrow, show: af.msgShow, hide: af.msgHide }; ah.isAjaxSubmit = false; if (af.valid || s(ag, "action") === null) { ah.isAjaxSubmit = true; } else { var ae = F[F._data ? "_data" : "data"](ag, "events"); if (ae && ae.valid && F.map(ae.valid, function (ak) { return ak.namespace.indexOf("form") !== -1 ? 1 : null; }).length) { ah.isAjaxSubmit = true; } } if (!ah.$el.data(K)) { ah.$el.data(K, ah).addClass(Q + " " + af.formClass).on("submit" + A + " validate" + A, S(ah, "_submit")).on("reset" + A, S(ah, "_reset")).on("showtip" + A, S(ah, "_showTip")).on("validated" + G + A, l, S(ah, "_validatedField")).on("validated" + j + A, l, S(ah, "_validatedRule")).on("focusin" + A + " click" + A + " showtip" + A, l, S(ah, "_focusin")).on("focusout" + A + " validate" + A, l, S(ah, "_focusout")); if (af.timely >= 2) { ah.$el.on("keyup" + A + " paste" + A, l, S(ah, "_focusout")).on("click" + A, ":radio,:checkbox", S(ah, "_click")).on("change" + A, 'select,input[type="file"]', S(ah, "_click")); } ah._novalidate = s(ag, n); s(ag, n, n); } }, _initFields: function (ad) { var ae = this; if (N(ad)) { F.each(ad, function (ag, af) { if (af === null) { var ah = ae.elements[ag]; if (ah) { ae._resetElement(ah, true); } delete ae.fields[ag]; } else { ae.fields[ag] = m(af) ? { rule: af } : af; } }); } ae.$el.find(l).each(function () { ae._parse(this); }); }, _parse: function (af) { var ag = this, ah, ad = af.name, ae = s(af, i); ae && s(af, i, null); if (af.id && ("#" + af.id in ag.fields) || !af.name) { ad = "#" + af.id; } if (!ad) { return; } ah = ag.fields[ad] || {}; ah.key = ad; ah.old = {}; ah.rule = ah.rule || ae || ""; if (!ah.rule) { return; } if (ah.rule.match(/match|checked/)) { ah.must = true; } if (ah.rule.indexOf("required") !== -1) { ah.required = true; s(af, ab, true); } if ("timely" in ah && !ah.timely || !ag.options.timely) { s(af, "notimely", true); } if (m(ah.target)) { s(af, W, ah.target); } if (m(ah.tip)) { s(af, J, ah.tip); } ag.fields[ad] = ag._parseRule(ah); }, _parseRule: function (af) { var ad = v.exec(af.rule), ae = this.options; if (!ad) { return; } af._i = 0; if (ad[1]) { af.display = ad[1]; } if (!af.display && ae.display) { af.display = ae.display; } if (ad[2]) { af.rules = []; ad[2].replace(O, function () { var ag = arguments; ag[3] = ag[3] || ag[4]; af.rules.push({ not: ag[1] === "!", method: ag[2], params: ag[3] ? ag[3].split(", ") : o, or: ag[5] === "|" }); }); } return af; }, _multiValidate: function (af, ad) { var ag = this, ae = ag.options; ag._multiValid = true; if (ae.ignore) { af = af.not(ae.ignore); } af.each(function (ah, ai) { var aj = ag.getField(ai); if (aj) { ag._validate(ai, aj); if (!ag._multiValid && ae.stopOnError) { return false; } } }); F.when.apply(null, F.map(ag.deferred, function (ah) { return ah; })).done(function () { ad.call(ag, ag._multiValid); }); return !F.isEmptyObject(ag.deferred) ? o : ag._multiValid; }, _submit: function (ag) { var af = this, ad = af.options, ae = ag.target, ah = ag.type === "submit"; if (V || ag.type === "validate" && af.$el[0] !== ae) { V = false; return; } if (af.submiting || ad.beforeSubmit.call(af, ae) === false) { ag.preventDefault(); return; } ad.debug && y.log("\n" + ag.type); af._reset(); af.submiting = true; af.isValid = o; af._multiValidate(af.$el.find(l), function (aj) { var ai = (aj || ad.debug === 2) ? "valid" : "invalid", ak; if (!aj) { if (ad.focusInvalid) { af.$el.find(":input[" + u + '="true"]:first').focus(); } ak = F.map(af.errors, function (al) { return al; }); } af.submiting = false; t(ad[ai]) && ad[ai].call(af, ae, ak); af.$el.trigger(ai + U, [ae, ak]); if (aj && !af.isAjaxSubmit && ah) { V = true; if (k && k.name) { k.click(); } else { ae.submit(); } } }); if (!af.isValid || af.isAjaxSubmit) { ag.preventDefault(); } }, _reset: function (ae) { var ad = this; ad.errors = {}; if (ae) { ad.$el.find(l).each(function (af, ag) { ad._resetElement(ag); }); } }, _resetElement: function (af, ae) { var ad = this.options; F(af).removeClass(ad.validClass + " " + ad.invalidClass); this.hideMsg(af); if (ae) { s(af, ab, null); } }, _focusin: function (ag) { var af = this, ad = af.options, ae = ag.target, ah; if (ag.type !== "showtip") { if (af.submiting) { return; } if (s(ae, I) === "error") { if (ad.focusCleanup) { F(ae).removeClass(ad.invalidClass); af.hideMsg(ae); } } else { if (ae.value !== "") { return; } } } ah = s(ae, J); if (!ah) { return; } af.showMsg(ae, { type: "tip", msg: ah }); }, _focusout: function (ag, al) { var ah = this, ae = ah.options, aj, an, af = ag.target, am = ag.type, ad = 0; if (!al && am !== "paste") { if (am === "validate") { an = true; } else { if (s(af, "notimely")) { return; } else { if (ae.timely >= 2 && am !== "keyup") { return; } } } if (ae.ignore && F(af).is(ae.ignore)) { return; } if (am === "keyup") { var ak = ag.keyCode, ai = { 8: 1, 9: 1, 16: 1, 32: 1, 46: 1 }; if (ak === 9 && !af.value) { return; } if (ak < 48 && !ai[ak]) { return; } ad = ae.timely >= 100 ? ae.timely : 500; } } aj = ah.getField(af); if (!aj) { return; } if (ad) { if (aj._t) { clearTimeout(aj._t); } aj._t = setTimeout(function () { ah._validate(af, aj, an); }, ad); } else { ah._validate(af, aj, an); } }, _click: function (ad) { this._focusout(ad, true); }, _showTip: function (ae) { var ad = this; if (ad.$el[0] !== ae.target) { return; } ad.$el.find(l + "[" + J + "]").each(function () { ad.showMsg(this, { msg: s(this, J), type: "tip" }); }); }, _validatedField: function (aj, ai, ad) { var ag = this, ae = ag.options, af = aj.target, ah = ad.isValid = ai.isValid = !!ad.isValid, ak = ah ? "valid" : "invalid"; ad.key = ai.key; ad.rule = ai._r; if (ah) { ad.type = "ok"; } else { if (ag.submiting) { ag.errors[ai.key] = ad.msg; } ag._multiValid = false; } ai.old.value = af.value; ai.old.id = af.id; ag.elements[ai.key] = ad.element = af; ag.$el[0].isValid = ag.isValid = ah ? ag.isFormValid() : ah; t(ai[ak]) && ai[ak].call(ag, af, ad); F(af).attr(u, ah ? null : true).removeClass(ah ? ae.invalidClass : ae.validClass).addClass(!ad.skip ? ah ? ae.validClass : ae.invalidClass : "").trigger(ak + G, [ad, ag]); ag.$el.triggerHandler("validation", [ad, ag]); if (ag.checkOnly) { return; } if (ai.msgMaker || ae.msgMaker) { ag[ad.showOk || ad.msg ? "showMsg" : "hideMsg"](af, ad, ai); } }, _validatedRule: function (ai, an, aj, am) { an = an || ak.getField(af); am = am || {}; var ak = this, ae = ak.options, af = ai.target, ag, al, ad = an._r, ah, ao = false; if (aj === null) { F(af).trigger("validated" + G, [an, { isValid: true, skip: true }]); return; } else { if (aj === true || aj === o || aj === "") { ao = true; } else { if (m(aj)) { ag = aj; } else { if (N(aj)) { if (aj.error) { ag = aj.error; } else { ag = aj.ok; ao = true; } } } } } if (an.rules) { al = an.rules[an._i]; if (al.not) { ag = o; ao = ad === "required" || !ao; } if (al.or) { if (ao) { while (an._i < an.rules.length && an.rules[an._i].or) { an._i++; } } else { ah = true; } } } if (!ah) { if (ao) { am.isValid = ao; if (ae.showOk !== false) { if (!m(ag)) { if (m(an.ok)) { ag = an.ok; } else { if (m(s(af, R))) { ag = s(af, R); } else { if (m(ae.showOk)) { ag = ae.showOk; } } } } if (m(ag)) { am.showOk = ao; am.msg = ag; } } F(af).trigger("valid" + j, [ad, am.msg]); } else { am.msg = (p(af, an, ag, ak.messages[ad]) || H.defaultMsg).replace("{0}", ak._getDisplay(af, an.display || "")); F(af).trigger("invalid" + j, [ad, am.msg]); } } if (ae.debug) { y.log("   " + an._i + ": " + ad + " => " + (ao || am.msg || ao)); } if (ah || ao && an._i < an.rules.length - 1) { an._i++; ak._checkRule(af, an); } else { an._i = 0; F(af).trigger("validated" + G, [an, am]); } }, _checkRule: function (ae, ak) { var ai = this, ah, af, al = ak.key, aj = ak.rules[ak._i], ad = aj.method, ag = aj.params; if (ai.submiting && ai.deferred[al]) { return; } af = ak.old; ak._r = ad; if (!ak.must && af.ret !== o && af.rule === aj && af.id === ae.id && ae.value && af.value === ae.value) { ah = af.ret; } else { ah = (c(ae, ad) || ai.rules[ad] || X).call(ai, ae, ag, ak); } if (N(ah) && t(ah.then)) { ai.deferred[al] = ah; !ai.checkOnly && ai.showMsg(ae, { type: "loading", msg: ai.options.loadingMsg }, ak); ah.then(function (aq, ar, an) { var ap = an.responseText, am, ao = ak.dataFilter || ai.options.dataFilter; if (this.dataType === "json") { ap = aq; } else { if (ap.charAt(0) === "{") { ap = F.parseJSON(ap) || {}; } } if (!t(ao)) { ao = function (at) { if (m(at) || (N(at) && ("error" in at || "ok" in at))) { return at; } }; } am = ao(ap); if (am === o) { am = ao(ap.data); } af.rule = aj; af.ret = am; F(ae).trigger("validated" + j, [ak, am]); }, function (am, an) { F(ae).trigger("validated" + j, [ak, an]); }).always(function () { delete ai.deferred[al]; }); ak.isValid = o; } else { F(ae).trigger("validated" + j, [ak, ah]); } }, _validate: function (af, aj) { if (af.disabled || s(af, n) !== null) { return; } var ag = this, ae = F(af), ak = {}, ai = aj.group, ad, ah = aj.isValid = true; if (!aj.rules) { ag._parse(af); } if (ag.options.debug) { y.info(aj.key); } if (ai) { ad = ai.callback.call(ag, ai.$elems); if (ad !== o) { ag.hideMsg(ai.target, {}, aj); if (ad === true) { ad = o; } else { aj._i = 0; aj._r = "group"; ah = false; ag.hideMsg(af, {}, aj); F.extend(ak, ai); } } } if (ah && !aj.required && !aj.must && !af.value) { if (s(af, I) === "tip") { return; } if (!B(af)) { ae.trigger("validated" + G, [aj, { isValid: true }]); return; } } if (ad !== o) { ae.trigger("validated" + j, [aj, ad, ak]); } else { if (aj.rule) { ag._checkRule(af, aj); } } }, test: function (ae, ah) { var af = this, ad, ag = D.exec(ah), aj, ai; if (ag) { aj = ag[1]; if (aj in af.rules) { ai = ag[2] || ag[3]; ai = ai ? ai.split(", ") : o; ad = af.rules[aj].call(af, ae, ai); } } return ad === true || ad === o || ad === null; }, getRangeMsg: function (am, af, aj, an) { if (!af) { return; } var ai = this, ae = ai.messages[aj] || "", ad = af[0].split("~"), al = ad[0], ak = ad[1], ah = "rg", ag = [""], ao = +am === +am; if (ad.length === 2) { if (al && ak) { if (ao && am >= +al && am <= +ak) { return true; } ag = ag.concat(ad); } else { if (al && !ak) { if (ao && am >= +al) { return true; } ag.push(al); ah = "gt"; } else { if (!al && ak) { if (ao && am <= +ak) { return true; } ag.push(ak); ah = "lt"; } } } } else { if (am === +al) { return true; } ag.push(al); ah = "eq"; } if (ae) { if (an && ae[ah + an]) { ah += an; } ag[0] = ae[ah]; } return ai.renderMsg.apply(null, ag); }, renderMsg: function () { var ae = arguments, ad = ae[0], af = ae.length; if (!ad) { return; } while (--af) { ad = ad.replace("{" + af + "}", ae[af]); } return ad; }, _getDisplay: function (ad, ae) { return !m(ae) ? t(ae) ? ae.call(this, ad) : "" : ae; }, _getMsgOpt: function (ad) { return F.extend({}, this.msgOpt, m(ad) ? { msg: ad } : ad); }, _getMsgDOM: function (ag, ae) { var ad = F(ag), ai, af, aj; if (ad.is(":input")) { aj = ae.target || s(ag, W); if (aj) { aj = this.$el.find(aj); if (aj.length) { if (aj.is(":input")) { ag = aj.get(0); } else { ai = aj; } } } if (!ai) { af = !B(ag) && ag.id ? ag.id : ag.name; ai = this.$el.find(ae.wrapper + "." + g + '[for="' + af + '"]'); } } else { ai = ad; } if (!ai.length) { ad = this.$el.find(aj || ag); ai = F("<" + ae.wrapper + ">").attr({ "class": g + (ae.cls ? " " + ae.cls : ""), style: ae.style || "", "for": af }); if (B(ag)) { var ah = ad.parent(); ai.appendTo(ah.is("label") ? ah.parent() : ah); } else { ai[!ae.pos || ae.pos === "right" ? "insertAfter" : "insertBefore"](ad); } } return ai; }, showMsg: function (af, ae, ai) { var ag = this; ae = ag._getMsgOpt(ae); if (!ae.msg && !ae.showOk) { return; } af = F(af).get(0); if (F(af).is(l)) { s(af, I, ae.type); ai = ai || ag.getField(af); if (ai) { ae.style = ai.msgStyle || ae.style; ae.cls = ai.msgClass || ae.cls; ae.wrapper = ai.msgWrapper || ae.wrapper; } } var ah = ag._getMsgDOM(af, ae), ad = ah[0].className; !h.test(ad) && ah.addClass(ae.cls); if (aa && ae.pos === "bottom") { ah[0].style.marginTop = F(af).outerHeight() + "px"; } ah.html(((ai || {}).msgMaker || ag.options.msgMaker).call(ag, ae)); ah[0].style.display = ""; t(ae.show) && ae.show.call(ag, ah, ae.type); }, hideMsg: function (ae, ad, ah) { var af = this; ae = F(ae).get(0); ad = af._getMsgOpt(ad); if (F(ae).is(l)) { s(ae, I, null); s(ae, u, null); ah = ah || af.getField(ae); if (ah) { ad.wrapper = ah.msgWrapper || ad.wrapper; } } var ag = af._getMsgDOM(ae, ad); if (!ag.length) { return; } if (t(ad.hide)) { ad.hide.call(af, ag, ad.type); } else { ag[0].style.display = "none"; } }, mapMsg: function (ae) { var ad = this; F.each(ae, function (af, ah) { var ag = ad.elements[af] || ad.$el.find(':input[name="' + af + '"]')[0]; ad.showMsg(ag, ah); }); }, setMsg: function (ad) { new T(ad, this.messages); }, setRule: function (ad) { new Y(ad, this.rules); F.map(this.fields, function (ae) { ae.old = {}; }); }, getField: function (ae) { var af = this, ad; if (ae.id && "#" + ae.id in af.fields || !ae.name) { ad = "#" + ae.id; } else { ad = ae.name; } if (s(ae, i)) { af._parse(ae); } return af.fields[ad]; }, setField: function (ae, af) { var ad = {}; if (m(ae)) { ad[ae] = af; } else { if (N(ae)) { ad = ae; } } this._initFields(ad); }, isFormValid: function () { var ad = this.fields; for (var ae in ad) { if (!ad[ae].isValid) { return ad[ae].isValid; } } return true; }, holdSubmit: function (ad) { this.submiting = ad === o || ad; }, cleanUp: function () { this._reset(1); }, destroy: function () { this._reset(1); this.$el.off(A).removeData(K); s(this.$el[0], n, this._novalidate); } }; function Y(ag, ae) { var af = ae ? ae === true ? this : ae : Y.prototype; if (!N(ag)) { return; } for (var ad in ag) { af[ad] = w(ag[ad]); } } function T(ag, ae) { var af = ae ? ae === true ? this : ae : T.prototype; if (!N(ag)) { return; } for (var ad in ag) { if (!ag[ad]) { return; } af[ad] = ag[ad]; } } function w(ad) { switch (F.type(ad)) { case "function": return ad; case "array": return function (ae) { return ad[0].test(ae.value) || ad[1] || false; }; case "regexp": return function (ae) { return ad.test(ae.value); }; } } function C(ae) { var ad = ""; F.map(ae.split(" "), function (af) { ad += "," + (af.charAt(0) === "#" ? af : '[name="' + af + '"]'); }); return ad.substring(1); } function M(ae) { var ad; if (!ae || !ae.tagName) { return; } switch (ae.tagName) { case "INPUT": case "SELECT": case "TEXTAREA": case "BUTTON": case "FIELDSET": ad = ae.form || F(ae).closest("." + Q); break; case "FORM": ad = ae; break; default: ad = F(ae).closest("." + Q); } return F(ad).data(K) || F(ad)[K]().data(K); } function Z(af) { var ad = af.currentTarget, ae; if (!ad.form || s(ad.form, n) !== null) { return; } ae = M(ad); if (ae) { ae._parse(ad); ae["_" + af.type](af); } else { s(ad, i, null); } } function c(ae, af) { var ad = F.trim(s(ae, i + "-" + af)); if (!ad) { return; } ad = (new Function("return " + ad))(); if (ad) { return w(ad); } } function p(af, ah, ae, ad) { var ai = ah.msg, ag = ah._r; if (N(ai)) { ai = ai[ag]; } if (!m(ai)) { ai = s(af, r + "-" + ag) || s(af, r) || ae || (ad ? m(ad) ? ad : ad[ag] : ""); } return ai; } function x(ad) { var ae; if (ad) { ae = h.exec(ad); } return ae ? ae[1] : ""; } function B(ad) { return ad.tagName === "INPUT" && ad.type === "checkbox" || ad.type === "radio"; } function f(ad) { return Date.parse(ad.replace(/\.|\-/g, "/")); } F(document).on("focusin", ":input[" + i + "]", function (ad) { Z(ad); }).on("click", "input,button", function (ag) { var ad = this, ae = ad.name; if (!ad.form) { return; } if (ad.type === "submit") { k = ad; if (s(ad, n) !== null) { V = true; } } else { if (ae && B(ad)) { var af = ad.form.elements[ae]; if (af.length) { af = af[0]; } if (s(af, i)) { Z(ag); } } } }).on("submit validate", "form", function (af) { if (s(this, n) !== null) { return; } var ad = F(this), ae; if (!ad.data(K)) { ae = ad[K]().data(K); if (!F.isEmptyObject(ae.fields)) { ae._submit(af); } else { s(this, n, n); ad.off(A).removeData(K); } } }); new Y({ required: function (ad, ag) { var af = F.trim(ad.value), ae = true; if (ag) { if (ag.length === 1) { if (!af && !this.test(ad, ag[0])) { s(ad, ab, null); return null; } else { s(ad, ab, true); } } else { if (ag[0] === "not") { F.map(ag.slice(1), function (ah) { if (af === F.trim(ah)) { ae = false; } }); } } } return ae && !!af; }, integer: function (ae, ai) { var af, ah = "0|", ag = "[1-9]\\d*", ad = ai ? ai[0] : "*"; switch (ad) { case "+": af = ag; break; case "-": af = "-" + ag; break; case "+0": af = ah + ag; break; case "-0": af = ah + "-" + ag; break; default: af = ah + "-?" + ag; } af = "^(?:" + af + ")$"; return new RegExp(af).test(ae.value) || this.messages.integer[ad]; }, match: function (ag, af, al) { if (!af) { return; } var aj = this, am, ak, an, ad, ai = "eq", ah, ao, ae; if (af.length === 1) { an = af[0]; } else { ai = af[0]; an = af[1]; } ah = an.charAt(0) === "#" ? an : ':input[name="' + an + '"]'; ao = aj.$el.find(ah)[0]; if (!ao) { return; } ae = aj.getField(ao); am = ag.value; ak = ao.value; if (!al._match) { aj.$el.on("valid" + G + A, ah, function () { F(ag).trigger("validate"); }); al._match = ae._match = 1; } if (!al.required && am === "" && ak === "") { return null; } if (af[2]) { if (af[2] === "date") { am = f(am); ak = f(ak); } else { if (af[2] === "time") { am = +am.replace(":", ""); ak = +ak.replace(":", ""); } } } if (ai !== "eq" && !isNaN(+am) && isNaN(+ak)) { return true; } ad = aj.messages.match[ai].replace("{1}", aj._getDisplay(ag, ae.display || an)); switch (ai) { case "lt": return (+am < +ak) || ad; case "lte": return (+am <= +ak) || ad; case "gte": return (+am >= +ak) || ad; case "gt": return (+am > +ak) || ad; case "neq": return (am !== ak) || ad; default: return (am === ak) || ad; } }, range: function (ad, ae) { return this.getRangeMsg(+ad.value, ae, "range"); }, checked: function (ad, ai, ah) { if (!B(ad)) { return; } var ag = this, af, ae; ae = ag.$el.find('input[name="' + ad.name + '"]').filter(function () { var aj = this; if (!af && B(aj)) { af = aj; } return !aj.disabled && aj.checked && F(aj).is(":visible"); }).length; if (ai) { return ag.getRangeMsg(ae, ai, "checked"); } else { return !!ae || p(af, ah, "") || ag.messages.required; } }, length: function (ae, ag) { if (!ag) { return; } var af = ae.value, ad = (ag[1] ? af.replace(e, "xx") : af).length; if (ag[0].charAt(0) === "~") { ag[0] = "0" + ag[0]; } return this.getRangeMsg(ad, ag, "length", (ag[1] ? "_2" : "")); }, remote: function (ag, ak) { if (!ak) { return; } var ai = this, ad = ac.exec(ak[0]), ae = ad[2], ah = (ad[1] || "POST").toUpperCase(), af, aj = {}; aj[ag.name] = ag.value; if (ak[1]) { F.map(ak.slice(1), function (an) { var am = an.split(":"), al; an = F.trim(am[0]); al = F.trim(am[1] || "") || an; aj[an] = ai.$el.find(al.charAt(0) === "#" ? al : ':input[name="' + al + '"]').val(); }); } aj = F.param(aj); if (ah === "POST") { af = ae.indexOf("?"); if (af !== -1) { aj += "&" + ae.substring(af + 1, ae.length); ae = ae.substring(0, af); } } return F.ajax({ url: ae, type: ah, data: aj, cache: false }); }, filter: function (ad, ae) { ad.value = ad.value.replace(ae ? (new RegExp("[" + ae[0] + "]", "gm")) : L, ""); } }); q.config = function (ad) { F.each(ad, function (ae, af) { if (ae === "rules") { new Y(af); } else { if (ae === "messages") { new T(af); } else { H[ae] = af; } } }); }; q.setTheme = function (ad, ae) { if (N(ad)) { F.each(ad, function (af, ag) { d[af] = ag; }); } else { if (m(ad) && N(ae)) { d[ad] = ae; } } }; F[K] = q; })(jQuery);